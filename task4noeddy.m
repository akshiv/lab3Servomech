clear; close all;
load('task4noeddy.mat')
kt = 1.311;
weights = 1/kt * abs(STDV3);
speed   = (1/kt) * CH3V;
referenceVoltage = CH1V;
[fitresult, gof] = createFit(referenceVoltage, speed, weights, STDV3, STDV1); 

function [fitresult, gof] = createFit(referenceVoltage, speed, weights, STDV3, STDV1)
%CREATEFIT(REFERENCEVOLTAGE,SPEED,WEIGHTS)
%  Create a fit.
%
%  Data for 'Speed Vs Reference Voltage' fit:
%      X Input : referenceVoltage
%      Y Output: speed
%      Weights : weights
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 21-Nov-2017 05:49:05


%% Fit: 'Speed Vs Reference Voltage'.
[xData, yData, weights_1] = prepareCurveData( referenceVoltage, speed, weights );

% Set up fittype and options.
ft = fittype( 'poly1' );
opts = fitoptions( 'Method', 'LinearLeastSquares' );
opts.Weights = weights_1;

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'Speed Vs Reference Voltage' );
h = plot( fitresult, xData, yData );
hold on 
legend( h, 'speed vs. referenceVoltage with weights', 'Speed Vs Reference Voltage', 'Location', 'Best' );

e  = errorbar(xData, yData, STDV1/2, STDV1/2, STDV3/2, STDV3/2, 'r.');
e.LineWidth = 1.5;

ax = gca;
ax.FontName = 'LaTeX';
ax.TickLabelInterpreter = 'LaTeX';
ax.FontSize = 18;
ax.XColor = 'k';
ax.YColor = 'k';

ax.YLabel.String = ('Speed (rad/s)');
ax.YLabel.FontSize = 16;
ax.YLabel.FontWeight = 'bold';
ax.YLabel.Color = 'k';

ax.XLabel.String = ('Reference Voltage V_r (V)');
ax.XLabel.FontSize = 16;
ax.XLabel.FontWeight = 'bold';
ax.XLabel.Color = 'k';
ax.XLim = [-4 4.5];

ax.Box = 'off';
ax.LineWidth = 1.5;
ax.YGrid = 'on';
ax.XMinorTick = 'on';
ax.YMinorTick = 'on';

t = title('Speed Vs. Reference Voltage');
t.Color = 'k';
t.Interpreter = 'LaTeX';
t.FontSize = 24;

end