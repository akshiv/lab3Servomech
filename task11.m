clear; close all;
load('Task11.mat');
weights = abs(STDV3);
f1 = figure(1);
h1 = plot(V1V2, V3, 'b');
hold on
e  = errorbar(V1V2, V3, STDV1V2/2, STDV1V2/2, STDV3/2, STDV3/2/2, 'r.');
e.LineWidth = 1.5;
ax = gca;
ax.FontName = 'LaTeX';
ax.TickLabelInterpreter = 'LaTeX';
ax.FontSize = 18;
ax.XColor = 'k';
ax.YColor = 'k';
ax.YLabel.String = ('Voltage Output (V)');
ax.YLabel.FontSize = 16;
ax.YLabel.FontWeight = 'bold';
ax.YLabel.Color = 'k';
ax.XLabel.String = ('Voltage Ideal Output V1 + V2 (V)');
ax.XLabel.FontSize = 16;
ax.XLabel.FontWeight = 'bold';
ax.XLabel.Color = 'k';
ax.Box = 'off';
ax.LineWidth = 1.5;
ax.YGrid = 'on';
ax.XMinorTick = 'on';
ax.YMinorTick = 'on';
t = title('Gain Charecterization OU150A');
t.Color = 'k';
t.Interpreter = 'LaTeX';
t.FontSize = 24;

[fitresult, gof] = createFit(V1V2, V3, weights);

function [fitresult, gof] = createFit(V1V2, V3, weights)
%CREATEFIT(V1V2,V3,WEIGHTS)
%  Create a fit.
%
%  Data for 'GainFindingOU' fit:
%      X Input : V1V2
%      Y Output: V3
%      Weights : weights
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 21-Nov-2017 05:33:51


%% Fit: 'GainFindingOU'.
[xData, yData, weights_1] = prepareCurveData( V1V2, V3, weights );

% Set up fittype and options.
ft = fittype( 'poly1' );
excludedPoints = excludedata( xData, yData, 'Indices', [1 2 3 14 15 16 17 18 19] );
opts = fitoptions( 'Method', 'LinearLeastSquares' );
opts.Weights = weights_1;
opts.Exclude = excludedPoints;

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
% figure( 'Name', 'GainFindingOU' );
% h = plot( fitresult, xData, yData, excludedPoints );
% legend( h, 'V3 vs. V1V2 with weights', 'Excluded V3 vs. V1V2 with weights', 'GainFindingOU', 'Location', 'NorthEast' );
% % Label axes
% xlabel V1V2
% ylabel V3
% grid on


end