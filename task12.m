clear; close all;
load('Task12.mat');
Mean5V = Mean2V-Mean3V;
weights = abs(STD2V+STD3V);
%%
f1 = figure(1);
h1 = plot(pMean13, pMean3, 'b');
hold on
e  = errorbar(pMean13, pMean3, pSTD13V/2, pSTD13V/2, pSTD3V/2, pSTD3V/2, 'r.');
e.LineWidth = 1.5;

ax = gca;
ax.FontName = 'LaTeX';
ax.TickLabelInterpreter = 'LaTeX';
ax.FontSize = 18;
ax.XColor = 'k';
ax.YColor = 'k';

ax.YLabel.String = ('Voltage Output V_4 (V)');
ax.YLabel.FontSize = 16;
ax.YLabel.FontWeight = 'bold';
ax.YLabel.Color = 'k';

ax.XLabel.String = ('Voltage Input V_1 (V)');
ax.XLabel.FontSize = 16;
ax.XLabel.FontWeight = 'bold';
ax.XLabel.Color = 'k';
%ax.XLim = [0, 10050];

ax.Box = 'off';
ax.LineWidth = 1.5;
ax.YGrid = 'on';
ax.XMinorTick = 'on';
ax.YMinorTick = 'on';

t = title('Gain Charecterization PA150C');
t.Color = 'k';
t.Interpreter = 'LaTeX';
t.FontSize = 24;
%%
f2 = figure(2);
h2 = plot(pMean12, pMean2, 'b');
hold on
e  = errorbar(pMean12, pMean2, pSTD12V/2, pSTD12V/2, pSTD2V/2, pSTD2V/2, 'r.');
e.LineWidth = 1.5;

ax = gca;
ax.FontName = 'LaTeX';
ax.TickLabelInterpreter = 'LaTeX';
ax.FontSize = 18;
ax.XColor = 'k';
ax.YColor = 'k';

ax.YLabel.String = ('Voltage Output V_3 (V)');
ax.YLabel.FontSize = 16;
ax.YLabel.FontWeight = 'bold';
ax.YLabel.Color = 'k';

ax.XLabel.String = ('Voltage Input V_1 (V)');
ax.XLabel.FontSize = 16;
ax.XLabel.FontWeight = 'bold';
ax.XLabel.Color = 'k';
%ax.XLim = [0, 10050];

ax.Box = 'off';
ax.LineWidth = 1.5;
ax.YGrid = 'on';
ax.XMinorTick = 'on';
ax.YMinorTick = 'on';

t = title('Gain Charecterization PA150C');
t.Color = 'k';
t.Interpreter = 'LaTeX';
t.FontSize = 24;


%%
f3 = figure(3);
h3 = plot(Mean1V, (Mean5V), 'b');
hold on
e  = errorbar(Mean1V, (Mean5V), STD1V/2, STD1V/2, (STD2V+STD3V)/2, (STD2V+STD3V)/2, 'r.');
e.LineWidth = 1.5;

ax = gca;
ax.FontName = 'LaTeX';
ax.TickLabelInterpreter = 'LaTeX';
ax.FontSize = 18;
ax.XColor = 'k';
ax.YColor = 'k';

ax.YLabel.String = ('Voltage Output V_3-V_4 (V)');
ax.YLabel.FontSize = 16;
ax.YLabel.FontWeight = 'bold';
ax.YLabel.Color = 'k';

ax.XLabel.String = ('Voltage Input V_1 (V)');
ax.XLabel.FontSize = 16;
ax.XLabel.FontWeight = 'bold';
ax.XLabel.Color = 'k';
%ax.XLim = [0, 10050];

ax.Box = 'off';
ax.LineWidth = 1.5;
ax.YGrid = 'on';
ax.XMinorTick = 'on';
ax.YMinorTick = 'on';

t = title('Gain Charecterization PA150C');
t.Color = 'k';
t.Interpreter = 'LaTeX';
t.FontSize = 24;

[fitresult, gof] = createFit(Mean1V, Mean5V, weights);

function [fitresult, gof] = createFit(Mean1V, Mean5V, weights)
%CREATEFIT(MEAN1V,MEAN5V,WEIGHTS)
%  Create a fit.
%
%  Data for 'GainPa' fit:
%      X Input : Mean1V
%      Y Output: Mean5V
%      Weights : weights
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 21-Nov-2017 05:38:09


%% Fit: 'GainPa'.
[xData, yData, weights_1] = prepareCurveData( Mean1V, Mean5V, weights );

% Set up fittype and options.
ft = fittype( 'poly1' );
excludedPoints = excludedata( xData, yData, 'Indices', [1 2 3 4 5 20 21 22 23 24 25 26] );
opts = fitoptions( 'Method', 'LinearLeastSquares' );
opts.Weights = weights_1;
opts.Exclude = excludedPoints;

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% % Plot fit with data.
% figure( 'Name', 'GainPa' );
% h = plot( fitresult, xData, yData, excludedPoints );
% legend( h, 'Mean5V vs. Mean1V with weights', 'Excluded Mean5V vs. Mean1V with weights', 'GainPa', 'Location', 'NorthEast' );
% % Label axes
% xlabel Mean1V
% ylabel Mean5V
% grid on

end